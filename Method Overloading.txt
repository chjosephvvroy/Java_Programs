//program to illustrate usage of this keyword in constructor overloading

class Test
{
    Test() //no-arg constructor
    {
        this(10,20);
    System.out.println("I am from Default Constructor");
    }
    Test(int x) //parameterized constructor
    {
        this(); //call the no-arg constructor
        System.out.println("I am from Single Parameter Constructor");
    
    }
    Test(int x, int y) //parameterized constructor
    {
        System.out.println("I am from Double Parameter Constructor");
    }
}
class ThisConDemo
{
    public static void main(String args[])
    {
        Test t1 = new Test(10);
    }
}




//program to illustrate this keyword
//program to illustrate Passing this as an Argument
class ThisExample {
    // declare variables
    int x;
    int y;
 
    ThisExample(int x, int y) {
       // assign values of variables inside constructor
        this.x = x;
        this.y = y;
 
        // value of x and y before calling add()
        System.out.println("Before passing this to addTwo() method:");
        System.out.println("x = " + this.x + ", y = " + this.y);
 
        // call the add() method passing this as argument
        add(this);
 
        // value of x and y after calling add()
        System.out.println("After passing this to addTwo() method:");
        System.out.println("x = " + this.x + ", y = " + this.y);
    }
 
    void add(ThisExample o){
        o.x += 2;
        o.y += 2;
    }
}
 
